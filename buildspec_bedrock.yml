version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 20
      python: '3.12'
    commands:
      - pwd
      - ls
      - echo Printing variables  $langchainpy_layer_name $addtional_libs_layer_name $strands_layer_name $agentic_tools_layer_name $account_id $region $infra_env
  build:
    commands:
      - git clone https://github.com/aws-samples/serverless-rag-demo.git
      - ls
      - cd serverless-rag-demo
      - echo Build aws4auth xmldict Boto3 Opensearchpy lambda layer
      - mkdir python
      - python3 -m pip install requests-aws4auth xmltodict opensearch-py --platform manylinux2014_aarch64 --only-binary=':all:' -t python/
      - zip -r aws4auth.zip python
      - aws lambda publish-layer-version --layer-name $addtional_libs_layer_name --zip-file fileb://aws4auth.zip --compatible-runtimes python3.10 python3.11 python3.12 --region $region --description Boto3,AWSAuth,XMLDict,OpensearchPy
      - rm -rf python aws4auth.zip
      - mkdir python
      - python3 -m pip install requests-aws4auth xmltodict opensearch-py -t python/
      - zip -r aws4auth.zip python
      - aws lambda publish-layer-version --layer-name $addtional_libs_layer_name-x86 --zip-file fileb://aws4auth.zip --compatible-runtimes python3.10 python3.11 python3.12 --region $region --description Boto3,AWSAuth,XMLDict,OpensearchPy
      - rm -rf python aws4auth.zip
      - mkdir python
      - python3 -m pip install geopy beautifulsoup4 python-pptx --platform manylinux2014_aarch64 --only-binary=':all:' -t python/
      - zip -r agentic_layers.zip python
      - aws lambda publish-layer-version --layer-name $agentic_tools_layer_name --zip-file fileb://agentic_layers.zip --compatible-runtimes python3.10 python3.11 python3.12 --region $region --description geopy,beautifulsoup,python-pptx
      - rm -rf python agentic_layers.zip
      - mkdir python
      - python3 -m pip install langchain --platform manylinux2014_aarch64 --only-binary=':all:' -t python/
      - zip -r langchainpy.zip python
      - aws lambda publish-layer-version --layer-name $langchainpy_layer_name --zip-file fileb://langchainpy.zip --compatible-runtimes python3.10 python3.11 python3.12 --region $region
      - rm -rf python langchainpy.zip
      - mkdir python
      - python3 -m pip install langchain -t python/
      - zip -r langchainpy.zip python
      - aws lambda publish-layer-version --layer-name $langchainpy_layer_name-x86 --zip-file fileb://langchainpy.zip --compatible-runtimes python3.10 python3.11 python3.12 --region $region
      - rm -rf python langchainpy.zip
      - mkdir python
      - python3 -m pip install pypdf[image] -t python/
      - zip -r pypdf.zip python
      - aws lambda publish-layer-version --layer-name $pypdf_layer_name-x86 --zip-file fileb://pypdf.zip --compatible-runtimes python3.10 python3.11 python3.12 --region $region
      - rm -rf python pypdf.zip
      - mkdir python
      - python3 -m pip install strands-agents strands-agents-tools --platform manylinux2014_aarch64 --only-binary=':all:' -t python/
      - zip -r strands_layers.zip python
      - aws s3 cp strands_layers.zip s3://serverless-rag-demo-$infra_env-$account_id-$region/layers/strands_layers.zip   
      - echo "Uploaded strands_layers.zip to s3://serverless-rag-demo-$infra_env-$account_id-$region/layers/strands_layers.zip"
      - echo "Publishing layer $strands_layer_name"
      - aws lambda publish-layer-version --layer-name $strands_layer_name --content S3Bucket=serverless-rag-demo-$infra_env-$account_id-$region,S3Key=layers/strands_layers.zip
      - rm -rf python strands_layers.zip
  post_build:
    commands:
      - echo Build completed on `date`
      
